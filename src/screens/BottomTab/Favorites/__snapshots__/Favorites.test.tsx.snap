// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Screen: FavoritesScreen should render screen with empty favorites 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "backgroundColor": "#443c3a",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingBottom": 104,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 30,
      }
    }
  >
    <Text
      style={
        {
          "color": "white",
          "fontSize": 20,
          "fontWeight": "bold",
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        }
      }
    >
      Personages favoritos
    </Text>
    <RCTScrollView
      ListEmptyComponent={
        <EmptyListButton
          handleEmptyListButton={[Function]}
          label="Adicione seus personages favoritos"
        />
      }
      bounces={false}
      contentContainerStyle={
        {
          "flexGrow": 1,
          "gap": 16,
          "paddingBottom": 12,
        }
      }
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      showsHorizontalScrollIndicator={false}
      stickyHeaderIndices={[]}
      style={
        {
          "maxHeight": 160,
        }
      }
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          style={
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 140,
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "center",
                "borderBottomLeftRadius": 8,
                "borderBottomRightRadius": 8,
                "borderColor": "#ffffff",
                "borderStyle": "solid",
                "borderTopLeftRadius": 8,
                "borderTopRightRadius": 8,
                "borderWidth": 1,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                {
                  "color": "white",
                  "fontSize": 12,
                  "fontWeight": "bold",
                }
              }
            >
              Adicione seus personages favoritos
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <Text
      style={
        {
          "color": "white",
          "fontSize": 20,
          "fontWeight": "bold",
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        }
      }
    >
      Episódios favoritos
    </Text>
    <RCTScrollView
      ListEmptyComponent={
        <EmptyListButton
          handleEmptyListButton={[Function]}
          label="Adicione seus episódios favoritos"
        />
      }
      bounces={false}
      contentContainerStyle={
        {
          "flexGrow": 1,
          "gap": 16,
        }
      }
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      showsHorizontalScrollIndicator={false}
      stickyHeaderIndices={[]}
      style={{}}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          style={
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 140,
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "center",
                "borderBottomLeftRadius": 8,
                "borderBottomRightRadius": 8,
                "borderColor": "#ffffff",
                "borderStyle": "solid",
                "borderTopLeftRadius": 8,
                "borderTopRightRadius": 8,
                "borderWidth": 1,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                {
                  "color": "white",
                  "fontSize": 12,
                  "fontWeight": "bold",
                }
              }
            >
              Adicione seus episódios favoritos
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Screen: FavoritesScreen should render screen with favorite characters 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "backgroundColor": "#443c3a",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingBottom": 104,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 30,
      }
    }
  >
    <Text
      style={
        {
          "color": "white",
          "fontSize": 20,
          "fontWeight": "bold",
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        }
      }
    >
      Personages favoritos
    </Text>
    <RCTScrollView
      ListEmptyComponent={
        <EmptyListButton
          handleEmptyListButton={[Function]}
          label="Adicione seus personages favoritos"
        />
      }
      bounces={false}
      contentContainerStyle={
        {
          "flexGrow": 1,
          "gap": 16,
          "paddingBottom": 12,
        }
      }
      data={
        [
          {
            "gender": "Male",
            "id": "1",
            "image": "https://rickandmortyapi.com/api/character/avatar/1.jpeg",
            "name": "Rick Sanchez",
            "species": "Human",
            "status": "Alive",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      showsHorizontalScrollIndicator={false}
      stickyHeaderIndices={[]}
      style={
        {
          "maxHeight": 160,
        }
      }
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "justifyContent": "center",
                "opacity": 1,
              }
            }
            testID="character-1"
          >
            <View
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "alignSelf": "center",
                    "borderBottomLeftRadius": 50,
                    "borderBottomRightRadius": 50,
                    "borderColor": "black",
                    "borderStyle": "solid",
                    "borderTopLeftRadius": 50,
                    "borderTopRightRadius": 50,
                    "borderWidth": 1,
                    "bottom": -12,
                    "height": 100,
                    "width": 100,
                    "zIndex": 2,
                  },
                ]
              }
            >
              <FastImageView
                defaultSource={null}
                resizeMode="cover"
                style={
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#926f44",
                  "borderBottomLeftRadius": 10,
                  "borderBottomRightRadius": 10,
                  "borderColor": "black",
                  "borderStyle": "solid",
                  "borderTopLeftRadius": 10,
                  "borderTopRightRadius": 10,
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "maxWidth": 343,
                  "minHeight": 58,
                  "paddingBottom": 0,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 4,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "white",
                    "fontSize": 16,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                Rick Sanchez
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <Text
      style={
        {
          "color": "white",
          "fontSize": 20,
          "fontWeight": "bold",
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        }
      }
    >
      Episódios favoritos
    </Text>
    <RCTScrollView
      ListEmptyComponent={
        <EmptyListButton
          handleEmptyListButton={[Function]}
          label="Adicione seus episódios favoritos"
        />
      }
      bounces={false}
      contentContainerStyle={
        {
          "flexGrow": 1,
          "gap": 16,
        }
      }
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      showsHorizontalScrollIndicator={false}
      stickyHeaderIndices={[]}
      style={{}}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          style={
            {
              "flexBasis": 0,
              "flexGrow": 1,
              "flexShrink": 1,
              "height": 140,
              "justifyContent": "center",
            }
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "alignItems": "center",
                "alignSelf": "center",
                "borderBottomLeftRadius": 8,
                "borderBottomRightRadius": 8,
                "borderColor": "#ffffff",
                "borderStyle": "solid",
                "borderTopLeftRadius": 8,
                "borderTopRightRadius": 8,
                "borderWidth": 1,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 16,
                "paddingLeft": 16,
                "paddingRight": 16,
                "paddingTop": 16,
              }
            }
          >
            <Text
              style={
                {
                  "color": "white",
                  "fontSize": 12,
                  "fontWeight": "bold",
                }
              }
            >
              Adicione seus episódios favoritos
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;

exports[`Screen: FavoritesScreen should render screen with favorite episode 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    {
      "flex": 1,
    }
  }
>
  <View
    style={
      {
        "backgroundColor": "#443c3a",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingBottom": 104,
        "paddingLeft": 16,
        "paddingRight": 16,
        "paddingTop": 30,
      }
    }
  >
    <Text
      style={
        {
          "color": "white",
          "fontSize": 20,
          "fontWeight": "bold",
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        }
      }
    >
      Personages favoritos
    </Text>
    <RCTScrollView
      ListEmptyComponent={
        <EmptyListButton
          handleEmptyListButton={[Function]}
          label="Adicione seus personages favoritos"
        />
      }
      bounces={false}
      contentContainerStyle={
        {
          "flexGrow": 1,
          "gap": 16,
          "paddingBottom": 12,
        }
      }
      data={
        [
          {
            "gender": "Male",
            "id": "1",
            "image": "https://rickandmortyapi.com/api/character/avatar/1.jpeg",
            "name": "Rick Sanchez",
            "species": "Human",
            "status": "Alive",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      showsHorizontalScrollIndicator={false}
      stickyHeaderIndices={[]}
      style={
        {
          "maxHeight": 160,
        }
      }
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "justifyContent": "center",
                "opacity": 1,
              }
            }
            testID="character-1"
          >
            <View
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "alignSelf": "center",
                    "borderBottomLeftRadius": 50,
                    "borderBottomRightRadius": 50,
                    "borderColor": "black",
                    "borderStyle": "solid",
                    "borderTopLeftRadius": 50,
                    "borderTopRightRadius": 50,
                    "borderWidth": 1,
                    "bottom": -12,
                    "height": 100,
                    "width": 100,
                    "zIndex": 2,
                  },
                ]
              }
            >
              <FastImageView
                defaultSource={null}
                resizeMode="cover"
                style={
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "backgroundColor": "#926f44",
                  "borderBottomLeftRadius": 10,
                  "borderBottomRightRadius": 10,
                  "borderColor": "black",
                  "borderStyle": "solid",
                  "borderTopLeftRadius": 10,
                  "borderTopRightRadius": 10,
                  "borderWidth": 1,
                  "justifyContent": "center",
                  "maxWidth": 343,
                  "minHeight": 58,
                  "paddingBottom": 0,
                  "paddingLeft": 12,
                  "paddingRight": 12,
                  "paddingTop": 4,
                }
              }
            >
              <Text
                style={
                  {
                    "color": "white",
                    "fontSize": 16,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                Rick Sanchez
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
    <Text
      style={
        {
          "color": "white",
          "fontSize": 20,
          "fontWeight": "bold",
          "marginBottom": 8,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 8,
          "width": "100%",
        }
      }
    >
      Episódios favoritos
    </Text>
    <RCTScrollView
      ListEmptyComponent={
        <EmptyListButton
          handleEmptyListButton={[Function]}
          label="Adicione seus episódios favoritos"
        />
      }
      bounces={false}
      contentContainerStyle={
        {
          "flexGrow": 1,
          "gap": 16,
        }
      }
      data={
        [
          {
            "air_date": "December 2, 2013",
            "characters": [
              {
                "id": "1",
                "image": "https://rickandmortyapi.com/api/character/avatar/1.jpeg",
              },
              {
                "id": "2",
                "image": "https://rickandmortyapi.com/api/character/avatar/2.jpeg",
              },
              {
                "id": "35",
                "image": "https://rickandmortyapi.com/api/character/avatar/35.jpeg",
              },
              {
                "id": "38",
                "image": "https://rickandmortyapi.com/api/character/avatar/38.jpeg",
              },
              {
                "id": "62",
                "image": "https://rickandmortyapi.com/api/character/avatar/62.jpeg",
              },
              {
                "id": "92",
                "image": "https://rickandmortyapi.com/api/character/avatar/92.jpeg",
              },
              {
                "id": "127",
                "image": "https://rickandmortyapi.com/api/character/avatar/127.jpeg",
              },
              {
                "id": "144",
                "image": "https://rickandmortyapi.com/api/character/avatar/144.jpeg",
              },
              {
                "id": "158",
                "image": "https://rickandmortyapi.com/api/character/avatar/158.jpeg",
              },
              {
                "id": "175",
                "image": "https://rickandmortyapi.com/api/character/avatar/175.jpeg",
              },
              {
                "id": "179",
                "image": "https://rickandmortyapi.com/api/character/avatar/179.jpeg",
              },
              {
                "id": "181",
                "image": "https://rickandmortyapi.com/api/character/avatar/181.jpeg",
              },
              {
                "id": "239",
                "image": "https://rickandmortyapi.com/api/character/avatar/239.jpeg",
              },
              {
                "id": "249",
                "image": "https://rickandmortyapi.com/api/character/avatar/249.jpeg",
              },
              {
                "id": "271",
                "image": "https://rickandmortyapi.com/api/character/avatar/271.jpeg",
              },
              {
                "id": "338",
                "image": "https://rickandmortyapi.com/api/character/avatar/338.jpeg",
              },
              {
                "id": "394",
                "image": "https://rickandmortyapi.com/api/character/avatar/394.jpeg",
              },
              {
                "id": "395",
                "image": "https://rickandmortyapi.com/api/character/avatar/395.jpeg",
              },
              {
                "id": "435",
                "image": "https://rickandmortyapi.com/api/character/avatar/435.jpeg",
              },
            ],
            "episode": "S01E01",
            "id": "1",
            "image": "https://image.tmdb.org/t/p/w500//oWaKdUeMOlVZem3v9DWsdDGlTuY.jpg",
            "name": "Pilot",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      showsHorizontalScrollIndicator={false}
      stickyHeaderIndices={[]}
      style={{}}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            style={
              {
                "backgroundColor": "#926f44",
                "borderBottomLeftRadius": 10,
                "borderBottomRightRadius": 10,
                "borderColor": "black",
                "borderStyle": "solid",
                "borderTopLeftRadius": 10,
                "borderTopRightRadius": 10,
                "borderWidth": 1,
                "flexDirection": "row",
                "height": 140,
                "marginBottom": 16,
                "paddingBottom": 8,
                "paddingLeft": 8,
                "paddingRight": 8,
                "paddingTop": 8,
                "width": 718,
              }
            }
            testID="episode-1"
          >
            <View
              style={
                [
                  {
                    "overflow": "hidden",
                  },
                  {
                    "borderBottomLeftRadius": 10,
                    "borderBottomRightRadius": 10,
                    "borderColor": "black",
                    "borderStyle": "solid",
                    "borderTopLeftRadius": 10,
                    "borderTopRightRadius": 10,
                    "borderWidth": 1,
                    "flexBasis": 0,
                    "flexGrow": 1,
                    "flexShrink": 1,
                  },
                ]
              }
            >
              <FastImageView
                defaultSource={null}
                resizeMode="cover"
                style={
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              />
            </View>
            <View
              style={
                {
                  "flexBasis": 0,
                  "flexGrow": 1,
                  "flexShrink": 1,
                  "marginBottom": 0,
                  "marginLeft": 6,
                  "marginRight": 6,
                  "marginTop": 0,
                }
              }
            >
              <View
                style={
                  {
                    "alignItems": "center",
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                    "justifyContent": "space-between",
                    "marginBottom": 6,
                    "marginLeft": 0,
                    "marginRight": 0,
                    "marginTop": 6,
                  }
                }
              >
                <Text
                  numberOfLines={1}
                  style={
                    {
                      "color": "white",
                      "flexBasis": 0,
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "fontSize": 12,
                      "fontWeight": "bold",
                      "marginLeft": 4,
                    }
                  }
                >
                  Pilot
                </Text>
                <View
                  accessibilityState={
                    {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessibilityValue={
                    {
                      "max": undefined,
                      "min": undefined,
                      "now": undefined,
                      "text": undefined,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                    }
                  }
                  testID="episode-1-favorite-icon-button"
                >
                  <SvgMock
                    color="#fff"
                    height={20}
                    testID="episode-1-favorite-icon-colorful"
                    width={20}
                  />
                </View>
              </View>
              <Text
                style={
                  {
                    "color": "white",
                    "fontSize": 10,
                    "marginBottom": 4,
                    "marginLeft": 0,
                    "marginRight": 0,
                    "marginTop": 4,
                  }
                }
              >
                S01E01
              </Text>
              <Text
                style={
                  {
                    "color": "white",
                    "fontSize": 10,
                    "marginBottom": 4,
                    "marginLeft": 0,
                    "marginRight": 0,
                    "marginTop": 4,
                  }
                }
              >
                2 de dezembro de 2013
              </Text>
              <Text
                highlight={true}
                style={
                  {
                    "color": "white",
                    "fontSize": 10,
                    "fontWeight": "bold",
                    "marginBottom": 4,
                    "marginLeft": 0,
                    "marginRight": 0,
                    "marginTop": 4,
                  }
                }
              >
                Principais personages
              </Text>
              <View
                style={
                  {
                    "flexBasis": 0,
                    "flexDirection": "row",
                    "flexGrow": 1,
                    "flexShrink": 1,
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      {
                        "alignSelf": "center",
                        "borderBottomLeftRadius": 12,
                        "borderBottomRightRadius": 12,
                        "borderColor": "black",
                        "borderStyle": "solid",
                        "borderTopLeftRadius": 12,
                        "borderTopRightRadius": 12,
                        "borderWidth": 1,
                        "height": 22,
                        "marginRight": 4,
                        "width": 22,
                      },
                    ]
                  }
                >
                  <FastImageView
                    defaultSource={null}
                    resizeMode="cover"
                    style={
                      {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      {
                        "alignSelf": "center",
                        "borderBottomLeftRadius": 12,
                        "borderBottomRightRadius": 12,
                        "borderColor": "black",
                        "borderStyle": "solid",
                        "borderTopLeftRadius": 12,
                        "borderTopRightRadius": 12,
                        "borderWidth": 1,
                        "height": 22,
                        "marginRight": 4,
                        "width": 22,
                      },
                    ]
                  }
                >
                  <FastImageView
                    defaultSource={null}
                    resizeMode="cover"
                    style={
                      {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      {
                        "alignSelf": "center",
                        "borderBottomLeftRadius": 12,
                        "borderBottomRightRadius": 12,
                        "borderColor": "black",
                        "borderStyle": "solid",
                        "borderTopLeftRadius": 12,
                        "borderTopRightRadius": 12,
                        "borderWidth": 1,
                        "height": 22,
                        "marginRight": 4,
                        "width": 22,
                      },
                    ]
                  }
                >
                  <FastImageView
                    defaultSource={null}
                    resizeMode="cover"
                    style={
                      {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      {
                        "alignSelf": "center",
                        "borderBottomLeftRadius": 12,
                        "borderBottomRightRadius": 12,
                        "borderColor": "black",
                        "borderStyle": "solid",
                        "borderTopLeftRadius": 12,
                        "borderTopRightRadius": 12,
                        "borderWidth": 1,
                        "height": 22,
                        "marginRight": 4,
                        "width": 22,
                      },
                    ]
                  }
                >
                  <FastImageView
                    defaultSource={null}
                    resizeMode="cover"
                    style={
                      {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      {
                        "alignSelf": "center",
                        "borderBottomLeftRadius": 12,
                        "borderBottomRightRadius": 12,
                        "borderColor": "black",
                        "borderStyle": "solid",
                        "borderTopLeftRadius": 12,
                        "borderTopRightRadius": 12,
                        "borderWidth": 1,
                        "height": 22,
                        "marginRight": 4,
                        "width": 22,
                      },
                    ]
                  }
                >
                  <FastImageView
                    defaultSource={null}
                    resizeMode="cover"
                    style={
                      {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
                <View
                  style={
                    [
                      {
                        "overflow": "hidden",
                      },
                      {
                        "alignSelf": "center",
                        "borderBottomLeftRadius": 12,
                        "borderBottomRightRadius": 12,
                        "borderColor": "black",
                        "borderStyle": "solid",
                        "borderTopLeftRadius": 12,
                        "borderTopRightRadius": 12,
                        "borderWidth": 1,
                        "height": 22,
                        "marginRight": 4,
                        "width": 22,
                      },
                    ]
                  }
                >
                  <FastImageView
                    defaultSource={null}
                    resizeMode="cover"
                    style={
                      {
                        "bottom": 0,
                        "left": 0,
                        "position": "absolute",
                        "right": 0,
                        "top": 0,
                      }
                    }
                  />
                </View>
                <SvgMock
                  color="#fff"
                  height={20}
                  style={
                    {
                      "alignSelf": "center",
                    }
                  }
                  width={20}
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaProvider>
`;
